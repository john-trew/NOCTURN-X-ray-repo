name: CT Images to Text

on:
  workflow_run:
    workflows: ["Parse MorphoSource Data"]
    types: [completed]

jobs:
  ct_image_text_job:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
          pip install requests beautifulsoup4 openai selenium pillow webdriver-manager

      - name: Fetch Latest Release
        id: fetch_release
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          echo "Fetching the latest release from this repo..."
          response=$(curl -sSL -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest)
          
          echo "$response" > latest_release.json
          
          body=$(echo "$response" | python -c "import sys, json; print(json.load(sys.stdin)['body'])")
          tag_name=$(echo "$response" | python -c "import sys, json; print(json.load(sys.stdin)['tag_name'])")
          
          # Extract URL from release body using Python
          url=$(echo "$body" | python -c "import sys, re; print(re.search(r'https://[^\s]+', sys.stdin.read()).group(0))")
          
          echo "Found release tag_name=$tag_name"
          echo "Found URL=$url"
          
          echo "release_body<<EOF" >> "$GITHUB_OUTPUT"
          echo "$body" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          
          echo "release_tag=$tag_name" >> "$GITHUB_OUTPUT"
          echo "morphosource_url=$url" >> "$GITHUB_OUTPUT"

      - name: Check if morphosource-updates
        id: check_morpho
        run: |
          TAG_NAME="${{ steps.fetch_release.outputs.release_tag }}"
          echo "Found TAG_NAME=$TAG_NAME"
          
          if [[ "$TAG_NAME" == morphosource-updates-* ]]; then
            echo "is_morphosource=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_morphosource=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate Timestamp
        id: gen_ts
        if: steps.check_morpho.outputs.is_morphosource == 'true'
        run: |
          TS=$(date +'%Y-%m-%d_%H-%M-%S')
          echo "timestamp=$TS" >> "$GITHUB_OUTPUT"

      - name: Process CT Images
        id: process_images
        if: steps.check_morpho.outputs.is_morphosource == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MORPHOSOURCE_URL: ${{ steps.fetch_release.outputs.morphosource_url }}
        run: |
          mkdir -p screenshots
          python .github/scripts/ct_image_to_text.py "$MORPHOSOURCE_URL" screenshots > ct_image_output.txt
          
          echo "description<<EOF" >> "$GITHUB_OUTPUT"
          cat ct_image_output.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create Image Analysis Release
        if: steps.check_morpho.outputs.is_morphosource == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: "ct_image_analysis-${{ steps.gen_ts.outputs.timestamp }}"
          release_name: "CT Image Analysis #${{ steps.gen_ts.outputs.timestamp }}"
          body: ${{ steps.process_images.outputs.description }}
          draft: false
          prerelease: false

      - name: No new morphosource release
        if: steps.check_morpho.outputs.is_morphosource == 'false'
        run: echo "No 'morphosource-updates-*' release found. Skipping CT image analysis."
