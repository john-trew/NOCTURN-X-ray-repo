name: Selenium Screenshot

on:
  workflow_run:
    # Must match the 'name:' from your parse_morphosource_data.yml
    workflows: ["Parse MorphoSource Data"]
    types: [completed]

jobs:
  screenshot_job:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      # -------------------------------------------------------
      # 1. Check out your repository
      # -------------------------------------------------------
      - name: Check out repo
        uses: actions/checkout@v3

      # -------------------------------------------------------
      # 2. Set up Python
      # -------------------------------------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # -------------------------------------------------------
      # 3. Install Dependencies (including Chrome and Chromedriver)
      # -------------------------------------------------------
      - name: Install Chrome and Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver

      - name: Install pip dependencies
        run: |
          pip install selenium requests beautifulsoup4 openai

      # -------------------------------------------------------
      # 4. Fetch Latest Release (multi-line safe)
      # -------------------------------------------------------
      - name: Fetch Latest Release
        id: fetch_release
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          echo "Fetching the latest release from this repo..."
          response=$(curl -sSL -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest)

          # Save JSON for debugging if needed
          echo "$response" > latest_release.json

          # Extract fields
          body=$(echo "$response" | python -c "import sys, json; print(json.load(sys.stdin)['body'])")
          tag_name=$(echo "$response" | python -c "import sys, json; print(json.load(sys.stdin)['tag_name'])")

          echo "Found release tag_name=$tag_name"

          # Store them as outputs for subsequent steps
          echo "release_body<<EOF" >> "$GITHUB_OUTPUT"
          echo "$body" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

          echo "release_tag=$tag_name" >> "$GITHUB_OUTPUT"

      # -------------------------------------------------------
      # 5. Check if morphosource-updates
      # -------------------------------------------------------
      - name: Check if morphosource-updates
        id: check_morpho
        run: |
          TAG_NAME="${{ steps.fetch_release.outputs.release_tag }}"
          echo "Found TAG_NAME=$TAG_NAME"

          if [[ "$TAG_NAME" == morphosource-updates-* ]]; then
            echo "is_morphosource=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_morphosource=false" >> "$GITHUB_OUTPUT"
          fi

      # -------------------------------------------------------
      # 6. Take Screenshots (Only if morphosource-updates)
      # -------------------------------------------------------
      - name: Take screenshots via Selenium
        if: steps.check_morpho.outputs.is_morphosource == 'true'
        run: |
          echo "${{ steps.fetch_release.outputs.release_body }}" > release_body.txt
          python .github/scripts/selenium_screenshot.py release_body.txt

      # -------------------------------------------------------
      # 7. Upload screenshots as artifacts
      # -------------------------------------------------------
      - name: Upload screenshots artifacts
        if: steps.check_morpho.outputs.is_morphosource == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: morphosource_screenshots
          path: screenshots/*

      # -------------------------------------------------------
      # 8. Fallback if not morphosource-updates
      # -------------------------------------------------------
      - name: No new morphosource release
        if: steps.check_morpho.outputs.is_morphosource == 'false'
        run: echo "No 'morphosource-updates-*' release found. Skipping screenshot steps."
