name: CT to Text

on:
  workflow_run:
    # Must match the 'name:' from your parse_morphosource_data.yml
    workflows: ["Parse MorphoSource Data"]
    types: [completed]

jobs:
  ct_text_job:
    runs-on: ubuntu-latest
    # Only run if Workflow #1 ended successfully
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: pip install requests beautifulsoup4 openai

      - name: Fetch Latest Release
        id: fetch_release
        env:
          # Provide a GitHub token with read access to releases
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          echo "Fetching the latest release from this repo..."
          response=$(curl -sSL -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest)

          # Save JSON for debugging if needed
          echo "$response" > latest_release.json

          # Extract fields via Python
          body=$(echo "$response" | python -c "import sys, json; print(json.load(sys.stdin)['body'])")
          tag_name=$(echo "$response" | python -c "import sys, json; print(json.load(sys.stdin)['tag_name'])")

          echo "Found release tag_name=$tag_name"

          # Output them for subsequent steps
          {
            echo "release_body<<EOF"
            echo "$body"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

          {
            echo "release_tag<<EOF"
            echo "$tag_name"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Check if morphosource-updates
        id: check_morpho
        run: |
          TAG_NAME="${{ steps.fetch_release.outputs.release_tag }}"
          echo "Found TAG_NAME=$TAG_NAME"

          if [[ "$TAG_NAME" == morphosource-updates-* ]]; then
            {
              echo "is_morphosource<<EOF"
              echo "true"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          else
            {
              echo "is_morphosource<<EOF"
              echo "false"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          fi

      - name: Run CT to Text
        id: ct2text
        if: steps.check_morpho.outputs.is_morphosource == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Save release_body to a file
          echo "${{ steps.fetch_release.outputs.release_body }}" > release_body.txt

          # Pass it to the script
          python .github/scripts/ct_to_text.py release_body.txt > ct_output.txt

          # Export the script output as 'description'
          {
            echo "description<<EOF"
            cat ct_output.txt
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Create or Update Release with AI Summary
        if: steps.check_morpho.outputs.is_morphosource == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: "ct_to_text_analysis-${{ github.run_number }}"
          release_name: "CT to Text Analysis #${{ github.run_number }}"
          body: ${{ steps.ct2text.outputs.description }}
          draft: false
          prerelease: false

      - name: No new morphosource release
        if: steps.check_morpho.outputs.is_morphosource == 'false'
        run: echo "No 'morphosource-updates-*' release found. Skipping CT-to-text analysis."
