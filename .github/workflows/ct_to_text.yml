name: CT to Text (on new Morphosource Release)

on:
  release:
    types: [published]

jobs:
  ct_text_job:
    # Only run if the newly published releaseâ€™s tag_name starts with "morphosource-updates-"
    if: startsWith(github.event.release.tag_name, 'morphosource-updates-')
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: pip install requests beautifulsoup4 openai

      - name: Capture the current release body
        id: capture_body
        run: |
          echo "release_body<<EOF" >> $GITHUB_OUTPUT
          echo "${{ github.event.release.body }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run CT to Text
        id: ct2text
        env:
          # For your script if it needs to fetch the latest release (already have it though),
          # or for authentication if your repo is private
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Option A) Pass the release body into your Python script as a file or env var
          echo "${{ steps.capture_body.outputs.release_body }}" > release_body.txt

          # Example: run a script that processes release_body.txt
          python .github/scripts/ct_to_text.py release_body.txt > ct_output.txt

          # Or if your script fetches 'release_body.txt' internally, adapt as needed

          # Convert that script's output to a workflow output named 'description'
          echo "description<<EOF" >> $GITHUB_OUTPUT
          cat ct_output.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Optional: If you want to create or update another release with the generated text
      - name: Create or Update Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: "ct-to-text-analysis-${{ github.run_number }}"
          release_name: "CT-to-Text Analysis #${{ github.run_number }}"
          body: ${{ steps.ct2text.outputs.description }}
          draft: false
          prerelease: false
