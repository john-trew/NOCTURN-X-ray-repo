name: Parquet Data Processor

on:
  workflow_dispatch:
    inputs:
      start_index:
        description: 'Starting index for batch processing'
        required: false
        default: '0'
      total_processed:
        description: 'Total records processed so far'
        required: false
        default: '0'
        
permissions:
  contents: write
  id-token: write

jobs:
  process-urls:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 pandas pyarrow tqdm
          
      - name: Generate Timestamp
        id: timestamp
        run: |
          TS=$(date +'%Y-%m-%d_%H-%M-%S')
          echo "timestamp=$TS" >> $GITHUB_OUTPUT
          
      - name: Process URLs
        id: process_urls
        run: |
          python .github/scripts/parquet_processor.py \
            --output-dir data/parquet/${{ steps.timestamp.outputs.timestamp }} \
            --batch-size 100 \
            --max-records 500 \
            --start-index ${{ inputs.start_index }} \
            --total-processed ${{ inputs.total_processed }} \
            --log-file data/parquet/${{ steps.timestamp.outputs.timestamp }}/processor.log
            
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: parquet-data-${{ steps.timestamp.outputs.timestamp }}
          path: data/parquet/${{ steps.timestamp.outputs.timestamp }}
          
      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add data/parquet/${{ steps.timestamp.outputs.timestamp }}
          git commit -m "Parquet data processing [${{ steps.timestamp.outputs.timestamp }}] - Batch starting at ${{ inputs.start_index }}"
          git push
          
      - name: Trigger Next Batch or Create Release
        if: steps.process_urls.outputs.has_more == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const nextIndex = parseInt('${{ steps.process_urls.outputs.next_index }}');
            const totalProcessed = parseInt('${{ steps.process_urls.outputs.total_processed }}');
            
            if ('${{ steps.process_urls.outputs.has_more }}' === 'true') {
              // Trigger next batch
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'parquet_processor.yml',
                ref: context.ref,
                inputs: {
                  start_index: nextIndex.toString(),
                  total_processed: totalProcessed.toString()
                }
              });
            } else {
              // Create release for completion
              await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: `parquet-complete-${process.env.TIMESTAMP}`,
                name: 'Parquet Processing Complete',
                body: `Completed processing ${totalProcessed} records\n\nFinal batch timestamp: ${process.env.TIMESTAMP}`,
                draft: false,
                prerelease: false
              });
            } 