name: 2D or 3D Media Analysis
on:
  workflow_dispatch:
    inputs:
      media_id:
        description: 'MorphoSource media ID to analyse (optional)'
        required: false
        type: string
      download_reason:
        description: 'Reason to provide when downloading 3D media assets'
        required: false
        type: string
  push:
    branches: [ "main" ]
    paths:
     - "src/**"
     - "tests/**"
     - ".github/workflows/dimension_test.yml"
     - ".github/scripts/dimension_media_fetcher.py"
     - ".github/scripts/iiif_manifest_viewer.py"
     - ".github/scripts/mesh_analysis.py"
  pull_request:
    branches: [ "main" ]
    paths:
     - "src/**"
     - "tests/**"
     - ".github/workflows/dimension_test.yml"
     - ".github/scripts/dimension_media_fetcher.py"
     - ".github/scripts/iiif_manifest_viewer.py"
     - ".github/scripts/mesh_analysis.py"

jobs:
  analyse-media:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install requests pillow trimesh numpy

      - name: Select MorphoSource media record
        id: select-media
        env:
          MEDIA_ID_INPUT: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.media_id || '' }}
          DOWNLOAD_REASON_INPUT: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.download_reason || '' }}
        run: |
          set -eo pipefail
          ARGS=()
          if [ -n "$MEDIA_ID_INPUT" ]; then
            ARGS+=(--media-id "$MEDIA_ID_INPUT")
          fi
          python .github/scripts/dimension_media_fetcher.py \
            "${ARGS[@]}" \
            --download-reason "${DOWNLOAD_REASON_INPUT:-Automated testing via GitHub Actions}" \
            --artifact-dir artifacts \
            --output-json artifacts/dimension_media_summary.json

      - name: Ensure media selection succeeded
        run: |
          set -eo pipefail
          if [ -z "${{ steps.select-media.outputs.media_dimension }}" ]; then
            echo "::error::No media record was returned by the selection script."
            exit 1
          fi
          if [ "${{ steps.select-media.outputs.media_dimension }}" == "unknown" ]; then
            echo "::warning::Selected media has an unknown dimension; skipping viewer steps."
            exit 0
          fi

      - name: Render IIIF preview with Pillow
        if: steps.select-media.outputs.media_dimension == '2d'
        run: |
          set -eo pipefail
          if [ -z "${{ steps.select-media.outputs.manifest_path }}" ]; then
            echo "::error::IIIF manifest path was not provided by the selection step."
            exit 1
          fi
          python .github/scripts/iiif_manifest_viewer.py \
            --manifest "${{ steps.select-media.outputs.manifest_path }}" \
            --output-dir artifacts

      - name: Analyse 3D mesh with trimesh
        if: steps.select-media.outputs.media_dimension == '3d'
        run: |
          set -eo pipefail
          if [ -z "${{ steps.select-media.outputs.download_dir }}" ]; then
            echo "::error::No download directory was produced for the 3D media."
            exit 1
          fi
          python .github/scripts/mesh_analysis.py \
            --download-dir "${{ steps.select-media.outputs.download_dir }}" \
            --output artifacts/mesh_analysis.json

      - name: Upload media metadata artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: morphosource_media_assets
          if-no-files-found: ignore
          path: artifacts/**
