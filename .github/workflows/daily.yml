name: Daily MorphoSource Check

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write
  id-token: write
  actions: write
  checks: write

jobs:
  daily-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for git operations
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4
          
      - name: Generate Timestamp
        id: timestamp
        run: |
          TS=$(date +'%Y-%m-%d_%H-%M-%S')
          echo "timestamp=$TS" >> $GITHUB_OUTPUT
          
      - name: Run Daily Check
        id: daily_check
        continue-on-error: true  # Allow continuing even if script fails
        run: |
          mkdir -p data/${{ steps.timestamp.outputs.timestamp }}
          python .github/scripts/daily.py \
            --output-dir data/${{ steps.timestamp.outputs.timestamp }} \
            --log-file data/${{ steps.timestamp.outputs.timestamp }}/daily_extractor.log
            
      - name: Upload Artifacts
        if: always()  # Upload artifacts whether script succeeded or failed
        uses: actions/upload-artifact@v3
        with:
          name: daily-check-${{ steps.timestamp.outputs.timestamp }}
          path: data/${{ steps.timestamp.outputs.timestamp }}
          
      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          
      - name: Commit and Push Changes
        id: push_changes
        run: |
          # Try to commit and push up to 3 times
          max_attempts=3
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            echo "::group::Attempt $attempt to commit and push"
            
            # Pull latest changes
            git pull --rebase origin main
            
            # Stage and commit
            git add data/${{ steps.timestamp.outputs.timestamp }}
            git commit -m "Daily check data [${{ steps.timestamp.outputs.timestamp }}]"
            
            # Try to push
            if git push; then
              echo "::notice::Successfully pushed changes on attempt $attempt"
              exit 0
            else
              echo "::warning::Push failed on attempt $attempt"
              if [ $attempt -eq $max_attempts ]; then
                echo "::error::Failed to push after $max_attempts attempts"
                exit 1
              fi
              sleep 5  # Wait before retrying
            fi
            
            echo "::endgroup::"
            attempt=$((attempt + 1))
          done

      - name: Create Release
        if: always()  # Create release whether previous steps succeeded or failed
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: daily-${{ steps.timestamp.outputs.timestamp }}
          release_name: "Daily Check ${{ steps.timestamp.outputs.timestamp }}"
          body: |
            Daily check results for ${{ steps.timestamp.outputs.timestamp }}
            
            Status:
            - Script: ${{ steps.daily_check.outcome }}
            - Push: ${{ steps.push_changes.outcome }}
            
            See attached artifacts for details.
          draft: false
          prerelease: ${{ steps.daily_check.outcome != 'success' || steps.push_changes.outcome != 'success' }}

      - name: Report Status
        if: always()
        run: |
          if [ "${{ steps.daily_check.outcome }}" != "success" ] || [ "${{ steps.push_changes.outcome }}" != "success" ]; then
            echo "::error::Daily check encountered issues - see release for details"
            exit 1
          fi
