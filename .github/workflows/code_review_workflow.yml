name: "Code Review and Analysis"

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: true
        type: string
  workflow_run:
    workflows: ["Claude Issue Automation"]
    types:
      - completed

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set branch name
        id: set-branch
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            BRANCH_NAME="claude-pr/issue-${{ github.event.inputs.issue_number }}"
          else
            BRANCH_NAME="${{ github.event.workflow_run.head_branch }}"
          fi
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Using branch: $BRANCH_NAME"

      # First checkout the issue branch
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.set-branch.outputs.branch_name }}
          path: issue-branch

      # Then checkout main branch
      - uses: actions/checkout@v4
        with:
          ref: main
          path: main-files

      # Set up the directory structure
      - name: Setup directories
        run: |
          # Move issue branch contents to workspace root
          mv issue-branch/* ./
          mv issue-branch/.github ./ || true
          rm -rf issue-branch

          # Copy relevant files from main to .github/main
          mkdir -p .github/main
          cp -r main-files/.github/scripts .github/main/ || true
          cp -r main-files/.github/workflows .github/main/ || true
          
          # Copy analyze_code.py from main to workspace
          cp main-files/.github/scripts/analyze_code.py .github/scripts/ || true
          
          rm -rf main-files
          
          # Debug directory structure
          echo "==== Full directory structure ===="
          find . -type f
          
          echo "==== Contents of .github/scripts ===="
          ls -la .github/scripts/ || echo "scripts dir not found"
          
          echo "==== Contents of .github/main ===="
          ls -la .github/main/ || echo "main dir not found"
          
          echo "==== Contents of .github/main/scripts ===="
          ls -la .github/main/scripts/ || echo "main/scripts dir not found"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install anthropic tenacity PyGithub
          
      - name: Process branch
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Processing issue #${{ github.event.inputs.issue_number }}"
          else
            echo "Processing workflow run from Claude automation"
          fi

      - name: Analyze code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Verify generated files exist
          if [ ! -d ".github/generated" ]; then
            echo "Error: .github/generated directory not found"
            exit 1
          fi
          
          # Use correct path to analyze_code.py
          python .github/scripts/analyze_code.py \
            --issue ${{ github.event.inputs.issue_number }} \
            --branch ${{ steps.set-branch.outputs.branch_name }} \
            --repo ${{ github.repository }} \
            --artifacts-dir .github/generated
            
          # Verify files were generated
          echo "Generated files:"
          find .github/generated/complete -type f -print
          
          # Create staging directory
          mkdir -p staging
          cp .github/generated/complete/* staging/
          
          echo "Found $(ls staging | wc -l) generated files"
          echo "Staging directory contents:"
          ls -R staging/

      - name: Upload combined code
        uses: actions/upload-artifact@v4
        with:
          name: combined-code
          path: staging
          if-no-files-found: error

      - name: Add review comment
        if: github.event_name == 'workflow_run'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f ".github/generated/review_comment.md" ]; then
            gh pr comment ${{ github.event.workflow_run.pull_requests[0].number }} -F .github/generated/review_comment.md
          fi

      - name: Show review comment
        if: github.event_name == 'workflow_dispatch' 
        run: |
          if [ -f ".github/generated/review_comment.md" ]; then
            echo "Review comment contents:"
            cat ".github/generated/review_comment.md"
          else
            echo "No review comment generated"
          fi
