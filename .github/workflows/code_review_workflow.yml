name: "Code Review and Analysis"

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: true
        type: string
  workflow_run:
    workflows: ["Auto Code Generation with Claude on Issue"]
    types: [completed]


permissions: write-all

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set branch name
        id: set-branch
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            BRANCH_NAME="claude-pr/issue-${{ github.event.inputs.issue_number }}"
          else
            BRANCH_NAME="${{ github.event.workflow_run.head_branch }}"
          fi
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Using branch: $BRANCH_NAME"

      # First checkout main branch files to a separate directory
      - uses: actions/checkout@v4
        with:
          ref: main
          path: main-files

      # Then checkout the issue branch to the workspace root
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.set-branch.outputs.branch_name }}
          fetch-depth: 0  # Get full history
          persist-credentials: true
          token: ${{ secrets.WORKFLOW_PAT }}
          repository: johntrue15/NOCTURN-X-ray-repo

      # Debug branch state
      - name: Debug branch state
        run: |
          echo "Current branch:"
          git branch
          echo "Current directory contents:"
          ls -la
          echo "Repository root contents:"
          ls -la /home/runner/work/NOCTURN-X-ray-repo/NOCTURN-X-ray-repo/.github/generated/ || echo "generated dir not found"
          
          if [ -f "/home/runner/work/NOCTURN-X-ray-repo/NOCTURN-X-ray-repo/.github/generated/metadata.json" ]; then
            echo "==== Contents of metadata.json ===="
            cat "/home/runner/work/NOCTURN-X-ray-repo/NOCTURN-X-ray-repo/.github/generated/metadata.json"
          else
            echo "metadata.json not found in repository"
            echo "Full repository structure:"
            find /home/runner/work/NOCTURN-X-ray-repo/NOCTURN-X-ray-repo/.github -type f
          fi

      # Set up the directory structure
      - name: Setup directories
        run: |
          # Create necessary directories
          mkdir -p .github/{main,scripts,generated}
          
          # Copy files from repository root
          cp -r /home/runner/work/NOCTURN-X-ray-repo/NOCTURN-X-ray-repo/.github/generated/* .github/generated/ || true
          
          # Copy relevant files from main to .github/main
          cp -r main-files/.github/scripts .github/main/ || true
          cp -r main-files/.github/workflows .github/main/ || true
          
          # Copy analyze_code.py from main to workspace
          cp main-files/.github/scripts/analyze_code.py .github/scripts/ || true
          
          rm -rf main-files
          
          # Debug directory structure
          echo "==== Full directory structure ===="
          find . -type f
          
          echo "==== Contents of .github/scripts ===="
          ls -la .github/scripts/ || echo "scripts dir not found"
          
          echo "==== Contents of .github/main ===="
          ls -la .github/main/ || echo "main dir not found"
          
          echo "==== Contents of .github/generated ===="
          ls -la .github/generated/ || echo "generated dir not found"
          
          # Check for metadata.json
          if [ -f ".github/generated/metadata.json" ]; then
            echo "==== Contents of metadata.json ===="
            cat .github/generated/metadata.json
          else
            echo "metadata.json not found in: $(pwd)/.github/generated/"
            echo "Listing .github contents:"
            ls -R .github/
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install anthropic tenacity PyGithub
          
      - name: Process branch
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Processing issue #${{ github.event.inputs.issue_number }}"
          else
            echo "Processing workflow run from Claude automation"
          fi

      - name: Analyze code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Run analyze_code.py to process the files
          echo "Running code analysis..."
          python .github/scripts/analyze_code.py
          
          # Debug staging contents
          echo "Staging directory contents:"
          find staging -type f

      - name: Commit combined files
        env:
          WORKFLOW_PAT: ${{ secrets.WORKFLOW_PAT }}
        run: |
          # Debug git status
          echo "Current branch:"
          git branch
          echo "Remote URL:"
          git remote -v
          
          # Debug staging contents
          echo "Staging contents:"
          find staging -type f
          
          # Copy files from staging to their final locations
          if [ -d "staging/.github" ]; then
            cp -r staging/.github/* .github/
            echo "Copied files from staging to .github"
          else
            echo "Error: staging/.github directory not found"
            exit 1
          fi
          
          # Configure git with PAT for workflow push
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${WORKFLOW_PAT}@github.com/${{ github.repository }}.git
          
          # Get files from metadata
          files=$(jq -r '.generated_files[]' .github/generated/metadata.json)
          
          # Add and commit each file
          while IFS= read -r file; do
            echo "Adding file: $file"
            git add "$file"
          done <<< "$files"
          
          # Commit and push
          git commit -m "Combined code updates for issue #${{ github.event.inputs.issue_number || github.event.workflow_run.pull_requests[0].number }}"
          git push origin HEAD:${{ steps.set-branch.outputs.branch_name }}

      - name: Add review comment
        if: github.event_name == 'workflow_run'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f ".github/generated/review_comment.md" ]; then
            gh pr comment ${{ github.event.workflow_run.pull_requests[0].number }} -F .github/generated/review_comment.md
          fi

      - name: Show review comment
        if: github.event_name == 'workflow_dispatch' 
        run: |
          if [ -f ".github/generated/review_comment.md" ]; then
            echo "Review comment contents:"
            cat ".github/generated/review_comment.md"
          else
            echo "No review comment generated"
          fi
