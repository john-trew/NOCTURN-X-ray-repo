name: Test Attestation Generation

on:
  workflow_dispatch:  # Manual trigger only

permissions:
  contents: write
  id-token: write
  actions: write
  attestations: write

jobs:
  test-attestation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        
      - name: Create test file
        run: |
          mkdir -p test_data
          echo "This is a test file for attestation" > test_data/test_subject.txt
          echo "Created test file at test_data/test_subject.txt"
      
      - name: Generate Timestamp
        id: timestamp
        run: |
          TS=$(date +'%Y-%m-%d_%H-%M-%S')
          echo "timestamp=$TS" >> $GITHUB_OUTPUT
          echo "Generated timestamp: $TS"
      
      # Format 1: Absolute Minimal
      - name: Test Attestation Format 1 - Absolute Minimal
        id: attestation_1
        continue-on-error: true
        uses: actions/attest@v2.1.0
        with:
          subject-path: test_data/test_subject.txt
          predicate-type: 'https://slsa.dev/provenance/v1'
          show-summary: true
          predicate: |
            {
              "buildDefinition": {
                "buildType": "https://slsa-framework.github.io/github-actions-buildtypes/workflow/v1",
                "externalParameters": {
                  "workflow": {
                    "ref": "${{ github.ref }}",
                    "repository": "${{ github.server_url }}/${{ github.repository }}",
                    "path": ".github/workflows/test-attestation.yml"
                  }
                },
                "internalParameters": {}
              },
              "runDetails": {
                "builder": {
                  "id": "${{ github.server_url }}/${{ github.repository }}/.github/workflows/test-attestation.yml@${{ github.ref }}"
                }
              }
            }
      
      # Format 2: Official version from GitHub Docs
      - name: Test Attestation Format 2 - GitHub Docs Example
        id: attestation_2
        continue-on-error: true
        uses: actions/attest@v2.1.0
        with:
          subject-path: test_data/test_subject.txt
          predicate-type: 'https://slsa.dev/provenance/v1'
          show-summary: true
          predicate: |
            {
              "buildDefinition": {
                "buildType": "https://slsa-framework.github.io/github-actions-buildtypes/workflow/v1",
                "externalParameters": {
                  "workflow": {
                    "ref": "${{ github.ref }}",
                    "repository": "${{ github.server_url }}/${{ github.repository }}",
                    "path": ".github/workflows/test-attestation.yml"
                  }
                },
                "internalParameters": {}
              },
              "runDetails": {
                "builder": {
                  "id": "${{ github.server_url }}/${{ github.repository }}/.github/workflows/test-attestation.yml@${{ github.ref }}"
                },
                "metadata": {
                  "invocationId": "${{ github.server_url }}/actions/runs/${{ github.run_id }}"
                }
              }
            }
      
      # Format 3: Ultra-minimal
      - name: Test Attestation Format 3 - Ultra-minimal 
        id: attestation_3
        continue-on-error: true
        uses: actions/attest@v2.1.0
        with:
          subject-path: test_data/test_subject.txt
          predicate-type: 'https://slsa.dev/provenance/v1'
          show-summary: true
          predicate: |
            {
              "buildDefinition": {
                "buildType": "https://slsa-framework.github.io/github-actions-buildtypes/workflow/v1",
                "externalParameters": {
                  "workflow": {
                    "ref": "${{ github.ref }}",
                    "repository": "${{ github.server_url }}/${{ github.repository }}",
                    "path": ".github/workflows/test-attestation.yml"
                  }
                },
                "internalParameters": {}
              },
              "runDetails": {}
            }
      
      # Create a report of the results
      - name: Generate Results Report
        run: |
          mkdir -p test_results
          
          echo "# Attestation Test Results - ${{ steps.timestamp.outputs.timestamp }}" > test_results/report.md
          echo "" >> test_results/report.md
          
          echo "## Format 1 (Absolute Minimal)" >> test_results/report.md
          echo "* Status: ${{ steps.attestation_1.outcome }}" >> test_results/report.md
          if [[ "${{ steps.attestation_1.outcome }}" == "success" ]]; then
            echo "* Attestation URL: ${{ steps.attestation_1.outputs.attestation-url }}" >> test_results/report.md
          else
            echo "* Failed to generate attestation" >> test_results/report.md
          fi
          
          echo "" >> test_results/report.md
          echo "## Format 2 (GitHub Docs Example)" >> test_results/report.md
          echo "* Status: ${{ steps.attestation_2.outcome }}" >> test_results/report.md
          if [[ "${{ steps.attestation_2.outcome }}" == "success" ]]; then
            echo "* Attestation URL: ${{ steps.attestation_2.outputs.attestation-url }}" >> test_results/report.md
          else
            echo "* Failed to generate attestation" >> test_results/report.md
          fi
          
          echo "" >> test_results/report.md
          echo "## Format 3 (Ultra-minimal)" >> test_results/report.md
          echo "* Status: ${{ steps.attestation_3.outcome }}" >> test_results/report.md
          if [[ "${{ steps.attestation_3.outcome }}" == "success" ]]; then
            echo "* Attestation URL: ${{ steps.attestation_3.outputs.attestation-url }}" >> test_results/report.md
          else
            echo "* Failed to generate attestation" >> test_results/report.md
          fi
          
          cat test_results/report.md
          
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: attestation-test-results-${{ steps.timestamp.outputs.timestamp }}
          path: test_results/report.md 